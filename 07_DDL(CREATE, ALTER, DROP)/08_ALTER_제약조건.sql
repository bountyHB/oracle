/*
   2. 제약조건 추가 / 삭제 / 이름 변경

   1) 제약조건 추가 (ADD)
      PRIMARY KEY 
      : ALTER TABLE 테이블명 ADD [CONSTRAINT 제약조건명] PRIMARY KEY(컬럼명);
      
      FOREIGN KEY 
      : ALTER TABLE 테이블명 ADD [CONSTRAINT 제약조건명] FOREIGN KEY(컬럼명) REFERENCES 테이블명[(컬럼명)];
      
      UNIQUE      
      : ALTER TABLE 테이블명 ADD [CONSTRAINT 제약조건명] UNIQUE(컬럼명);
      
      CHECK       
      : ALTER TABLE 테이블명 ADD [CONSTRAINT 제약조건명] CHECK(컬럼에 대한 조건);
      
      NOT NULL    
      : ALTER TABLE 테이블명 MODIFY 컬렴명 [CONSTRAINT 제약조건명] NOT NULL;
*/


-- 실습에 사용할 테이블 생성
CREATE TABLE DEPT_COPY
AS SELECT *
   FROM DEPARTMENT;

SELECT * FROM DEPT_COPY;

-- DEPT_COPY 테이블에 DEPT_ID 컬럼에 PK 제약조건 추가
ALTER TABLE DEPT_COPY ADD PRIMARY KEY (DEPT_ID);

ALTER TABLE DEPT_COPY DROP CONSTRAINT SYS_C007175;

ALTER TABLE DEPT_COPY ADD CONSTRAINT DEPT_COPY_DEPT_ID_PK PRIMARY KEY (DEPT_ID);

-- DEPT_COPY 테이블 
-- DEPT_TITLE 컬럼에 UNIQUE, NOT NULL 제약조건 추가
ALTER TABLE DEPT_COPY 
ADD CONSTRAINT DEPT_COPY_DEPT_TITLE_UQ UNIQUE (DEPT_TITLE)
MODIFY DEPT_TITLE CONSTRAINT DEPT_COPY_DEPT_TITLE_NN NOT NULL;

-- EMPLOYEE 테이블에 DEPT_CODE, JOB_CODE 컬럼에 FOREIGN KEY 제약조건을 적용 
SELECT *
FROM EMPLOYEE;

ALTER TABLE EMPLOYEE 
ADD CONSTRAINT EMPLOYEE_DEPT_CODE_FK FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT(DEPT_ID)
ADD CONSTRAINT EMPLOYEE_JOB_CODE_FK FOREIGN KEY (JOB_CODE) REFERENCES JOB(JOB_CODE);


/*
   2) 제약조건 삭제
      NOT NULL 
      : ALTER TABLE 테이블명 MODIFY 컬럼명 NULL;
      나머지 
      : ALTER TABLE 테이블명 DROP CONSTRAINT 제약조건명;
*/


-- DEPT_COPY 테이블에 DEPT_COPY_DEPT_ID_PK 제약조건 삭제
ALTER TABLE DEPT_COPY DROP CONSTRAINT DEPT_COPY_DEPT_ID_PK;

-- DEPT_COPY 테이블 
-- DEPT_TITLE 컬럼의 UNIQUE, NOT NULL 제약조건 삭제

ALTER TABLE DEPT_COPY DROP CONSTRAINT DEPT_COPY_DEPT_TITLE_UQ
MODIFY DEPT_TITLE NULL;


/*
   3) 제약조건명 변경 (RENAME CONSTRAINT)
      ALTER TABLE 테이블명 RENAME CONSTRAINT 기존제약조건명 TO 변경할제약조건명;
*/


-- DEPT_COPY 테이블에 SYS_C007214 제약조건명을 DEPT_COPY_DEPT_ID_NN으로 변경
ALTER TABLE DEPT_COPY RENAME CONSTRAINT SYS_C007214 TO DEPT_COPY_DEPT_IN_NN;


/*
   3. 테이블명 변경 (RENAME)
      ALTER TABLE 테이블명 RENAME TO 변경할 테이블명;
      RENAME 기존 테이블명 TO 변경할 테이블명;
*/


-- DEPT_COPY 테이블의 이름을 DEPT_TEST로 변경
ALTER TABLE DEPT_TEST RENAME TO DEPT_COPY;
RENAME DEPT_COPY TO DEPT_TEST;

SELECT * FROM DEPT_TEST;


/*
   <DROP>
      오라클에서 제공하는 객체를 삭제하는 구문이다.
*/


-- DEPT_TEST 테이블 삭제
DROP TABLE DEPT_TEST;

-- 참조되고 있는 부모 테이블은 삭제가 되지 않는다.
DROP TABLE MEMBER_GRADE;

-- 만약 삭제하고자 한다면
-- 1) 자식 테이블을 먼저 삭제한 후 부모테이블을 삭제하는 방법
DROP TABLE MEMBER;
DROP TABLE MEMBER_GRADE;

-- 2) 부모 테이블을 삭제할 때 제약조건도 함께 삭제하는 방법
DROP TABLE MEMBER_GRADE CASCADE CONSTRAINT; 


-- 위 실습에 사용할 테이블 생성 쿼리
CREATE TABLE MEMBER_GRADE (
   GRADE_CODE NUMBER,
   GRADE_NAME VARCHAR2 (20) NOT NULL,
   CONSTRAINT MEMBER_GRADE_PK PRIMARY KEY(GRADE_CODE)
);

INSERT INTO MEMBER_GRADE VALUES (10, '일반회원');
INSERT INTO MEMBER_GRADE VALUES (20, '우수회원');
INSERT INTO MEMBER_GRADE VALUES (30, '특별회원');

CREATE TABLE MEMBER (
   NO NUMBER,
   ID VARCHAR2(20) NOT NULL,
   PASSWORD VARCHAR2(20) NOT NULL,
   NAME VARCHAR2(15) NOT NULL,
   GENDER CHAR(3),
   AGE NUMBER,
   GRADE_ID NUMBER CONSTRAINT MEMBER_GRADE_ID_FK REFERENCES MEMBER_GRADE (GRADE_CODE),
   ENROLL_DATE DATE DEFAULT SYSDATE,
   CONSTRAINT MEMBER_NO_PK PRIMARY KEY(NO), 
   CONSTRAINT MEMBER_ID_UQ UNIQUE(ID),
   CONSTRAINT MEMBER_GENGER_CK CHECK(GENDER IN ('남','여')),
   CONSTRAINT MEMBER_AGE_CH CHECK(AGE > 0)
);

INSERT INTO MEMBER VALUES(1, 'USER1', '1234', '김삿갓', '남', 24, 10, DEFAULT);
INSERT INTO MEMBER VALUES(2, 'USER2', '1234', '성춘향', '여', 18, NULL, DEFAULT);

SELECT *
FROM MEMBER_GRADE;

SELECT *
FROM MEMBER;